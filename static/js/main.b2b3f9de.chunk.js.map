{"version":3,"sources":["ts/Input.tsx","ts/InputArea.tsx","ts/App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputBox","props","state","apClass","score","Container","Form","Group","Row","Col","sm","Control","as","onChange","e","setState","target","value","Number","Component","InputArea","Input","App","className","Jumbotron","style","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAwFeA,E,kDAnFX,WAAYC,GAAqB,IAAD,8BAC5B,cAAMA,IACDC,MAAQ,CACTC,QAAS,GACTC,MAAO,GAJiB,E,qDAStB,IAAD,OACL,OACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAKC,MAAN,UACI,eAACD,EAAA,EAAKE,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAM,EAAX,SACI,eAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAI,SAASC,SAAY,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAACZ,QAASW,EAAEE,OAAOC,SAA7E,UACI,iDACA,8FACA,sDACA,kDACA,oDACA,4DACA,qEACA,yDACA,yDACA,2EACA,6EACA,gEACA,iFACA,+EACA,iEACA,4DACA,yDACA,0DACA,iDACA,iDACA,iDACA,kDACA,mDACA,kDACA,wDACA,4DACA,6DACA,sDACA,sDACA,sDACA,2DACA,+DACA,+EACA,qDACA,qDACA,+CAGR,cAACR,EAAA,EAAD,CAAKC,GAAM,EAAX,SACI,eAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAG,SAASC,SAAY,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAACX,MAAOc,OAAOJ,EAAEE,OAAOC,UAAjF,UACI,iDACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uD,GAjETE,aCyBRC,E,kDAdX,WAAYnB,GAAwB,uCAC1BA,G,qDAIN,OACI,eAACI,EAAA,EAAD,WACI,cAACgB,EAAD,IACA,cAACA,EAAD,W,GAVQF,aCoCTG,MAzCf,WACE,OACE,eAACjB,EAAA,EAAD,CAAWkB,UAAY,KAAvB,UACE,cAACC,EAAA,EAAD,UACE,oBAAID,UAAY,SAAhB,wBAKF,oBAAIE,MAAO,CAACC,UAAW,UAAvB,+EAGA,oBAAID,MAAO,CAACC,UAAW,UAAvB,4DAGA,oBAAID,MAAO,CAACC,UAAW,UAAvB,qIAIA,eAACrB,EAAA,EAAD,CAAWkB,UAAY,SAAvB,UACE,cAACf,EAAA,EAAD,UACE,qCAEF,eAACA,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,oBAAIgB,MAAO,CAACC,UAAW,UAAvB,qBAEF,cAACjB,EAAA,EAAD,UACA,oBAAIgB,MAAO,CAACC,UAAW,UAAvB,2BAKJ,cAACrB,EAAA,EAAD,CAAWkB,UAAY,cAAvB,SACE,cAAC,EAAD,UC3BOI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b2b3f9de.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Col, Container, Form    } from 'react-bootstrap';\n\nclass InputBox extends Component<InputProps, InputState> {\n\n    constructor(props : InputProps) {\n        super(props);\n        this.state = {\n            apClass: \"\",\n            score: 0,\n        }\n        \n    }\n\n    render() {\n        return (\n            <Container>\n                <Form.Group>\n                    <Form.Row>\n                        <Col sm = {8}>\n                            <Form.Control as =\"select\" onChange = {e => this.setState({apClass: e.target.value})}>\n                                <option> Choose... </option>\n                                <option> AP Art (Drawing, 2D Art and Design, 3D Art and Design) </option>\n                                <option> AP Art History </option>\n                                <option> AP Biology </option>\n                                <option> AP Chemistry </option>\n                                <option> AP Computer Science A</option>\n                                <option> AP Computer Science Principles</option>\n                                <option> AP Microeconomics </option>\n                                <option> AP Macroeconomics </option>\n                                <option> AP English Language and Composition </option>\n                                <option> AP English Composition and Literature </option>\n                                <option> AP Environmental Science </option>\n                                <option> AP Government and Politics: United States </option>\n                                <option> AP Government and Politics: Comparative </option>\n                                <option> AP History: United States </option>\n                                <option> AP History: European </option>\n                                <option> AP History: World </option>\n                                <option> AP Human Geography </option>\n                                <option> AP Chinese</option>\n                                <option> AP French </option>\n                                <option> AP German </option>\n                                <option> AP Italian </option>\n                                <option> AP Japanese </option>\n                                <option> AP Spanish </option>\n                                <option> AP Latin: Virgil </option>\n                                <option> AP Latin: Literature </option>\n                                <option> AP Spanish Literature </option>\n                                <option> AP Calculus AB </option>\n                                <option> AP Calculus BC </option>\n                                <option> AP Music Theory</option>\n                                <option> AP Physics (1 or 2) </option>\n                                <option> AP Physics C: Mechanics </option>\n                                <option> AP Physics C: Electricity and Magnetism </option>\n                                <option> AP Psychology </option>\n                                <option> AP Statistics </option>\n                                <option> AP </option>\n                            </Form.Control>\n                        </Col>\n                        <Col sm = {2}>\n                            <Form.Control as=\"select\" onChange = {e => this.setState({score: Number(e.target.value)})}>\n                                <option> Choose... </option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n                                <option>7</option>\n                            </Form.Control>\n                        </Col>  \n                    </Form.Row>\n                        {/* <p>{this.state.apClass}</p>\n                        <p>{this.state.score}</p> */}\n                </Form.Group>\n            </Container>\n        )   \n    }\n}\n\ntype InputProps = {\n}\n\ntype InputState = {\n    apClass: String;\n    score: Number;\n}\n\nexport default InputBox;\n","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport InputBox from './Input';\n\ntype inputAreaProps = {\n\n}\n\ntype inputAreaState = {\n\n}\n\nclass InputArea extends Component<inputAreaProps, inputAreaState> {\n\n    constructor(props: inputAreaProps) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <Container>\n                <InputBox/>\n                <InputBox/>\n            </Container>\n        )\n    }\n}\n\nexport default InputArea;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Col, Container, Jumbotron, Row } from 'react-bootstrap';\nimport InputBox from './Input';\nimport InputArea from './InputArea';\n\nfunction App() {\n  return (\n    <Container className = \"p1\">\n      <Jumbotron>\n        <h1 className = \"header\">\n          UCSD GEs\n        </h1>\n      </Jumbotron>\n      \n      <h3 style={{textAlign: \"center\"}}>\n        Ever been confused about what GE classes you're supposed to take?\n      </h3>\n      <h3 style={{textAlign: \"center\"}}>\n        Wonder what college has the least GEs for you?\n      </h3>\n      <h3 style={{textAlign: \"center\"}}>\n        This site is made to help you out. Start by picking a college and entering which AP exams you passed with a 3, 4, or 5.\n      </h3>\n\n      <Container className = \"labels\">\n        <Row>\n          <h1> </h1>\n        </Row>\n        <Row>\n          <Col>\n            <h4 style={{textAlign: \"center\"}}>Class</h4>\n          </Col>\n          <Col>\n          <h4 style={{textAlign: \"center\"}}>Score</h4>\n          </Col>\n        </Row>\n      </Container>\n\n      <Container className = \"input-boxes\">\n        <InputArea/>\n      </Container>\n    </Container>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ts/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}